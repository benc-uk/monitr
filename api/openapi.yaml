openapi: 3.0.0
info:
  title: NanoMon API Service
  version: '2023-03-12'
  description: This is the NanoMon REST API
tags:
  - name: Monitors
  - name: Results
paths:
  /api/monitors:
    get:
      tags:
        - Monitors
      operationId: MonitorAPI_list
      description: List all monitors
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Monitor'
                x-typespec-name: Monitor[]
    post:
      tags:
        - Monitors
      operationId: MonitorAPI_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
  /api/monitors/{id}:
    get:
      tags:
        - Monitors
      operationId: MonitorAPI_get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      tags:
        - Monitors
      operationId: MonitorAPI_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: >-
            There is no content to send for this request, but the headers may be
            useful. 
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /api/monitors/{id}/results:
    get:
      tags:
        - Monitors
      operationId: MonitorAPI_getResults
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
                x-typespec-name: Result[]
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /api/results:
    get:
      tags:
        - Results
      operationId: ResultsAPI_getResults
      parameters:
        - name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'
                x-typespec-name: Result[]
security:
  - BearerAuth: []
components:
  schemas:
    Monitor:
      type: object
      properties:
        id:
          type: string
          pattern: '[A-Fa-f0-9]{24}'
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        type:
          $ref: '#/components/schemas/MonitorType'
        target:
          type: string
        interval:
          type: string
          format: duration
        rule:
          type: string
        enabled:
          type: boolean
        properties:
          type: object
          additionalProperties:
            type: string
          x-typespec-name: Record<string>
      required:
        - id
        - updated
        - name
        - type
        - target
        - interval
        - rule
        - enabled
        - properties
    MonitorType:
      type: string
      enum:
        - http
        - ping
        - tcp
    Problem:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          minimum: 100
          maximum: 599
        detail:
          type: string
        instance:
          type: string
      required:
        - type
        - title
        - status
        - detail
        - instance
    Result:
      type: object
      properties:
        date:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
          minimum: 0
          maximum: 2
        value:
          type: number
          format: double
        message:
          type: string
        monitor_id:
          type: string
        monitor_name:
          type: string
        monitor_target:
          type: string
      required:
        - date
        - status
        - value
        - message
        - monitor_id
        - monitor_name
        - monitor_target
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: http://localhost:8000
    description: Local dev server endpoint
    variables: {}
